<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Algorithm Notes</title>
    <link>/posts/</link>
    <description>Recent content in Posts on Algorithm Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 22 Sep 2021 22:49:26 +0800</lastBuildDate><atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>非递归的扩展欧几里得算法</title>
      <link>/posts/non-recursive-extended-euclid/</link>
      <pubDate>Wed, 22 Sep 2021 22:49:26 +0800</pubDate>
      
      <guid>/posts/non-recursive-extended-euclid/</guid>
      <description>扩展欧几里得算法可以算出方程 \(ax + by = \gcd(a, b)\)（\(a, b \in \Z\)）的一组整数解。本文假设读者已经知道扩展欧几里得算法的递归实现，下面我们来推导它的非递归实现。
首先回顾欧几里得算法，典型的实现是递归的
// precondition: a，b 非负且不全是零。 int gcd(int a, int b) { return b == 0 ? a : gcd(b, a % b); } 我们考虑上述 gcd 函数的执行过程，设初次调用 gcd 的两个参数是 \((x_1, x_2)\)。若 \(x_2 \ne 0\) 则第二次调用 gcd 的两个参数是 \((x_2, x_1 \bmod x_2)\)，令 \(x_3 = x_1 \bmod x_2\)。这样，在 gcd 执行的过程中就得到序列 \(x_1, x_2, \dots, x_{n-1} = \gcd(x_1, x_2), x_n = 0\)。第一次调用 gcd 的参数是 \((x_1, x_2)\)，第二次调用 gcd 的参数是 \((x_2, x_3)\)，第 \(n - 1\) 次调用 gcd 的参数是 \((x_{n-1}, x_n)\)。序列 \(x\) 满足 \(x_{i} = x_{i - 2} \bmod x_{i - 1}\)（\(i \ge 3\)）。</description>
    </item>
    
    <item>
      <title>Bitwise XOR Convolution</title>
      <link>/posts/bitwise-xor-convolution/</link>
      <pubDate>Wed, 15 Sep 2021 15:52:40 +0800</pubDate>
      
      <guid>/posts/bitwise-xor-convolution/</guid>
      <description>从线性变换的角度推导异或卷积。</description>
    </item>
    
    <item>
      <title>Connected Subgraphs Counting</title>
      <link>/posts/subgraph-counting/</link>
      <pubDate>Tue, 31 Aug 2021 00:08:53 +0800</pubDate>
      
      <guid>/posts/subgraph-counting/</guid>
      <description>一个简单的计数问题。</description>
    </item>
    
    <item>
      <title>隔板法应用一例</title>
      <link>/posts/delimiter-method/</link>
      <pubDate>Thu, 26 Aug 2021 18:28:42 +0800</pubDate>
      
      <guid>/posts/delimiter-method/</guid>
      <description>一个简单的计数问题。</description>
    </item>
    
  </channel>
</rss>
